@page "/auth/reset-password"

@using System.ComponentModel.DataAnnotations
@using EndPointEcommerce.WebStore.Api
@using EndPointEcommerce.WebStore.State
@using System.Text.Json

@inject NavigationManager Navigation
@inject IApiClient ApiClient
@inject AlertStateContainer AlertState

<PageTitle>Reset your password - End Point Ecommerce</PageTitle>

<section class="py-5">
    <div class="container px-4 px-lg-5 my-5">
        <div class="card mb-2 p-3">
            <h3>Reset your password</h3>
            <EditForm Model="ResetPasswordInput" method="post" OnValidSubmit="SubmitResetPassword">
                <DataAnnotationsValidator />

                <div class="row">
                    <div class="col-md">
                        <div class="form-floating mb-3">
                            <InputText @bind-Value="ResetPasswordInput.Password"
                                type="password"
                                id="ResetPasswordInput.Password"
                                class="form-control"
                                autocomplete="new-password"
                                aria-required="true"
                                placeholder="password"
                            />
                            <label for="ResetPasswordInput.Password" class="form-label">
                                Password
                            </label>
                            <ValidationMessage For="() => ResetPasswordInput.Password" class="text-danger" />
                        </div>
                    </div>
                    <div class="col-md">
                        <div class="form-floating mb-3">
                            <InputText @bind-Value="ResetPasswordInput.ConfirmPassword"
                                type="password"
                                id="ResetPasswordInput.ConfirmPassword"
                                class="form-control"
                                autocomplete="new-password"
                                aria-required="true"
                                placeholder="confirm password"
                            />
                            <label for="ResetPasswordInput.ConfirmPassword" class="form-label">
                                Confirm password
                            </label>
                            <ValidationMessage For="() => ResetPasswordInput.ConfirmPassword" class="text-danger" />
                        </div>
                    </div>
                </div>

                @if (ErrorMessages.Count > 0)
                {
                    <ul class="validation-errors">
                        @foreach (var error in ErrorMessages)
                        {
                            <li class="validation-message">@error</li>
                        }
                    </ul>
                }

                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-outline-dark" disabled="@(!SubmitButtonEnabled)">
                        Reset
                    </button>
                </div>
            </EditForm>
        </div>
    </div>
</section>

@code {
    private sealed class ResetPasswordInputModel
    {
        [Required]
        public string Password { get; set; } = string.Empty;

        [Required]
        [Compare("Password")]
        public string ConfirmPassword { get; set; } = string.Empty;
    }

    [SupplyParameterFromQuery]
    public string Email { get; set; } = string.Empty;

    [SupplyParameterFromQuery]
    public string ResetCode { get; set; } = string.Empty;

    private ResetPasswordInputModel ResetPasswordInput { get; set; } = new();

    private bool SubmitButtonEnabled { get; set; } = true;

    private List<string> ErrorMessages { get; set; } = new();

    protected override void OnInitialized()
    {
        if (string.IsNullOrEmpty(Email) || string.IsNullOrEmpty(ResetCode))
        {
            Navigation.NavigateTo("/auth/login");
        }
    }

    public async Task SubmitResetPassword()
    {
        ErrorMessages.Clear();
        SubmitButtonEnabled = false;

        var response = await ApiClient.PostUserResetPassword(
            Email, ResetCode, ResetPasswordInput.Password
        );

        if (response.IsSuccessStatusCode)
        {
            _ = AlertState.SetMessage("Password reset successful. You can now sign in.");
            Navigation.NavigateTo("/auth/login");
        }
        else
        {
            ErrorMessages = await response.GetErrorMessages();
            SubmitButtonEnabled = true;
        }
    }
}
