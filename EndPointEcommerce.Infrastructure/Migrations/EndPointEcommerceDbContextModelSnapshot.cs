// Copyright 2025 End Point Corporation. Apache License, version 2.0.

ï»¿// <auto-generated />
using System;
using EndPointEcommerce.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NpgsqlTypes;

#nullable disable

namespace EndPointEcommerce.Infrastructure.Migrations
{
    [DbContext(typeof(EndPointEcommerceDbContext))]
    partial class EndPointEcommerceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_deleted");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_modified");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<int?>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("street");

                    b.Property<string>("StreetTwo")
                        .HasColumnType("text")
                        .HasColumnName("street_two");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("zip_code");

                    b.HasKey("Id")
                        .HasName("pk_addresses");

                    b.HasIndex("CountryId")
                        .HasDatabaseName("ix_addresses_country_id");

                    b.HasIndex("CustomerId")
                        .HasDatabaseName("ix_addresses_customer_id");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_addresses_state_id");

                    b.ToTable("addresses", (string)null);
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_deleted");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_modified");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enabled");

                    b.Property<int?>("MainImageId")
                        .HasColumnType("integer")
                        .HasColumnName("main_image_id");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text")
                        .HasColumnName("meta_description");

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("text")
                        .HasColumnName("meta_keywords");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("text")
                        .HasColumnName("meta_title");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("UrlKey")
                        .HasColumnType("text")
                        .HasColumnName("url_key");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.HasIndex("MainImageId")
                        .HasDatabaseName("ix_categories_main_image_id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_categories_name");

                    b.HasIndex("UrlKey")
                        .IsUnique()
                        .HasDatabaseName("ix_categories_url_key");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enabled");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_countries");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("ix_countries_code");

                    b.ToTable("countries", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "AF",
                            IsEnabled = true,
                            Name = "Afghanistan"
                        },
                        new
                        {
                            Id = 2,
                            Code = "AL",
                            IsEnabled = true,
                            Name = "Albania"
                        },
                        new
                        {
                            Id = 3,
                            Code = "DZ",
                            IsEnabled = true,
                            Name = "Algeria"
                        },
                        new
                        {
                            Id = 4,
                            Code = "AS",
                            IsEnabled = true,
                            Name = "American Samoa"
                        },
                        new
                        {
                            Id = 5,
                            Code = "AD",
                            IsEnabled = true,
                            Name = "Andorra"
                        },
                        new
                        {
                            Id = 6,
                            Code = "AO",
                            IsEnabled = true,
                            Name = "Angola"
                        },
                        new
                        {
                            Id = 7,
                            Code = "AI",
                            IsEnabled = true,
                            Name = "Anguilla"
                        },
                        new
                        {
                            Id = 8,
                            Code = "AQ",
                            IsEnabled = true,
                            Name = "Antarctica"
                        },
                        new
                        {
                            Id = 9,
                            Code = "AG",
                            IsEnabled = true,
                            Name = "Antigua And Barbuda"
                        },
                        new
                        {
                            Id = 10,
                            Code = "AR",
                            IsEnabled = true,
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = 11,
                            Code = "AM",
                            IsEnabled = true,
                            Name = "Armenia"
                        },
                        new
                        {
                            Id = 12,
                            Code = "AW",
                            IsEnabled = true,
                            Name = "Aruba"
                        },
                        new
                        {
                            Id = 13,
                            Code = "AU",
                            IsEnabled = true,
                            Name = "Australia"
                        },
                        new
                        {
                            Id = 14,
                            Code = "AT",
                            IsEnabled = true,
                            Name = "Austria"
                        },
                        new
                        {
                            Id = 15,
                            Code = "AZ",
                            IsEnabled = true,
                            Name = "Azerbaijan"
                        },
                        new
                        {
                            Id = 16,
                            Code = "BS",
                            IsEnabled = true,
                            Name = "Bahamas"
                        },
                        new
                        {
                            Id = 17,
                            Code = "BH",
                            IsEnabled = true,
                            Name = "Bahrain"
                        },
                        new
                        {
                            Id = 18,
                            Code = "BD",
                            IsEnabled = true,
                            Name = "Bangladesh"
                        },
                        new
                        {
                            Id = 19,
                            Code = "BB",
                            IsEnabled = true,
                            Name = "Barbados"
                        },
                        new
                        {
                            Id = 20,
                            Code = "BY",
                            IsEnabled = true,
                            Name = "Belarus"
                        },
                        new
                        {
                            Id = 21,
                            Code = "BE",
                            IsEnabled = true,
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = 22,
                            Code = "BZ",
                            IsEnabled = true,
                            Name = "Belize"
                        },
                        new
                        {
                            Id = 23,
                            Code = "BJ",
                            IsEnabled = true,
                            Name = "Benin"
                        },
                        new
                        {
                            Id = 24,
                            Code = "BM",
                            IsEnabled = true,
                            Name = "Bermuda"
                        },
                        new
                        {
                            Id = 25,
                            Code = "BT",
                            IsEnabled = true,
                            Name = "Bhutan"
                        },
                        new
                        {
                            Id = 26,
                            Code = "BO",
                            IsEnabled = true,
                            Name = "Bolivia"
                        },
                        new
                        {
                            Id = 27,
                            Code = "BA",
                            IsEnabled = true,
                            Name = "Bosnia And Herzegowina"
                        },
                        new
                        {
                            Id = 28,
                            Code = "BW",
                            IsEnabled = true,
                            Name = "Botswana"
                        },
                        new
                        {
                            Id = 29,
                            Code = "BV",
                            IsEnabled = true,
                            Name = "Bouvet Island"
                        },
                        new
                        {
                            Id = 30,
                            Code = "BR",
                            IsEnabled = true,
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = 31,
                            Code = "IO",
                            IsEnabled = true,
                            Name = "British Indian Ocean Territory"
                        },
                        new
                        {
                            Id = 32,
                            Code = "BN",
                            IsEnabled = true,
                            Name = "Brunei Darussalam"
                        },
                        new
                        {
                            Id = 33,
                            Code = "BG",
                            IsEnabled = true,
                            Name = "Bulgaria"
                        },
                        new
                        {
                            Id = 34,
                            Code = "BF",
                            IsEnabled = true,
                            Name = "Burkina Faso"
                        },
                        new
                        {
                            Id = 35,
                            Code = "BI",
                            IsEnabled = true,
                            Name = "Burundi"
                        },
                        new
                        {
                            Id = 36,
                            Code = "KH",
                            IsEnabled = true,
                            Name = "Cambodia"
                        },
                        new
                        {
                            Id = 37,
                            Code = "CM",
                            IsEnabled = true,
                            Name = "Cameroon"
                        },
                        new
                        {
                            Id = 38,
                            Code = "CA",
                            IsEnabled = true,
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 39,
                            Code = "CV",
                            IsEnabled = true,
                            Name = "Cape Verde"
                        },
                        new
                        {
                            Id = 40,
                            Code = "KY",
                            IsEnabled = true,
                            Name = "Cayman Islands"
                        },
                        new
                        {
                            Id = 41,
                            Code = "CF",
                            IsEnabled = true,
                            Name = "Central African Republic"
                        },
                        new
                        {
                            Id = 42,
                            Code = "TD",
                            IsEnabled = true,
                            Name = "Chad"
                        },
                        new
                        {
                            Id = 43,
                            Code = "CL",
                            IsEnabled = true,
                            Name = "Chile"
                        },
                        new
                        {
                            Id = 44,
                            Code = "CN",
                            IsEnabled = true,
                            Name = "China"
                        },
                        new
                        {
                            Id = 45,
                            Code = "CX",
                            IsEnabled = true,
                            Name = "Christmas Island"
                        },
                        new
                        {
                            Id = 46,
                            Code = "CC",
                            IsEnabled = true,
                            Name = "Cocos (Keeling) Islands"
                        },
                        new
                        {
                            Id = 47,
                            Code = "CO",
                            IsEnabled = true,
                            Name = "Colombia"
                        },
                        new
                        {
                            Id = 48,
                            Code = "KM",
                            IsEnabled = true,
                            Name = "Comoros"
                        },
                        new
                        {
                            Id = 49,
                            Code = "CG",
                            IsEnabled = true,
                            Name = "Congo"
                        },
                        new
                        {
                            Id = 50,
                            Code = "CD",
                            IsEnabled = true,
                            Name = "Congo, The Democratic Republic Of The"
                        },
                        new
                        {
                            Id = 51,
                            Code = "CK",
                            IsEnabled = true,
                            Name = "Cook Islands"
                        },
                        new
                        {
                            Id = 52,
                            Code = "CR",
                            IsEnabled = true,
                            Name = "Costa Rica"
                        },
                        new
                        {
                            Id = 53,
                            Code = "CI",
                            IsEnabled = true,
                            Name = "Cote D'ivoire"
                        },
                        new
                        {
                            Id = 54,
                            Code = "HR",
                            IsEnabled = true,
                            Name = "Croatia (Local Name: Hrvatska)"
                        },
                        new
                        {
                            Id = 55,
                            Code = "CU",
                            IsEnabled = true,
                            Name = "Cuba"
                        },
                        new
                        {
                            Id = 56,
                            Code = "CY",
                            IsEnabled = true,
                            Name = "Cyprus"
                        },
                        new
                        {
                            Id = 57,
                            Code = "CZ",
                            IsEnabled = true,
                            Name = "Czech Republic"
                        },
                        new
                        {
                            Id = 58,
                            Code = "DK",
                            IsEnabled = true,
                            Name = "Denmark"
                        },
                        new
                        {
                            Id = 59,
                            Code = "DJ",
                            IsEnabled = true,
                            Name = "Djibouti"
                        },
                        new
                        {
                            Id = 60,
                            Code = "DM",
                            IsEnabled = true,
                            Name = "Dominica"
                        },
                        new
                        {
                            Id = 61,
                            Code = "DO",
                            IsEnabled = true,
                            Name = "Dominican Republic"
                        },
                        new
                        {
                            Id = 62,
                            Code = "TP",
                            IsEnabled = true,
                            Name = "East Timor"
                        },
                        new
                        {
                            Id = 63,
                            Code = "EC",
                            IsEnabled = true,
                            Name = "Ecuador"
                        },
                        new
                        {
                            Id = 64,
                            Code = "EG",
                            IsEnabled = true,
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = 65,
                            Code = "SV",
                            IsEnabled = true,
                            Name = "El Salvador"
                        },
                        new
                        {
                            Id = 66,
                            Code = "GQ",
                            IsEnabled = true,
                            Name = "Equatorial Guinea"
                        },
                        new
                        {
                            Id = 67,
                            Code = "ER",
                            IsEnabled = true,
                            Name = "Eritrea"
                        },
                        new
                        {
                            Id = 68,
                            Code = "EE",
                            IsEnabled = true,
                            Name = "Estonia"
                        },
                        new
                        {
                            Id = 69,
                            Code = "ET",
                            IsEnabled = true,
                            Name = "Ethiopia"
                        },
                        new
                        {
                            Id = 70,
                            Code = "FK",
                            IsEnabled = true,
                            Name = "Falkland Islands (Malvinas)"
                        },
                        new
                        {
                            Id = 71,
                            Code = "FO",
                            IsEnabled = true,
                            Name = "Faroe Islands"
                        },
                        new
                        {
                            Id = 72,
                            Code = "FJ",
                            IsEnabled = true,
                            Name = "Fiji"
                        },
                        new
                        {
                            Id = 73,
                            Code = "FI",
                            IsEnabled = true,
                            Name = "Finland"
                        },
                        new
                        {
                            Id = 74,
                            Code = "FR",
                            IsEnabled = true,
                            Name = "France"
                        },
                        new
                        {
                            Id = 75,
                            Code = "FX",
                            IsEnabled = true,
                            Name = "France, Metropolitan"
                        },
                        new
                        {
                            Id = 76,
                            Code = "GF",
                            IsEnabled = true,
                            Name = "French Guiana"
                        },
                        new
                        {
                            Id = 77,
                            Code = "PF",
                            IsEnabled = true,
                            Name = "French Polynesia"
                        },
                        new
                        {
                            Id = 78,
                            Code = "TF",
                            IsEnabled = true,
                            Name = "French Southern Territories"
                        },
                        new
                        {
                            Id = 79,
                            Code = "GA",
                            IsEnabled = true,
                            Name = "Gabon"
                        },
                        new
                        {
                            Id = 80,
                            Code = "GM",
                            IsEnabled = true,
                            Name = "Gambia"
                        },
                        new
                        {
                            Id = 81,
                            Code = "GE",
                            IsEnabled = true,
                            Name = "Georgia"
                        },
                        new
                        {
                            Id = 82,
                            Code = "DE",
                            IsEnabled = true,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 83,
                            Code = "GH",
                            IsEnabled = true,
                            Name = "Ghana"
                        },
                        new
                        {
                            Id = 84,
                            Code = "GI",
                            IsEnabled = true,
                            Name = "Gibraltar"
                        },
                        new
                        {
                            Id = 85,
                            Code = "GR",
                            IsEnabled = true,
                            Name = "Greece"
                        },
                        new
                        {
                            Id = 86,
                            Code = "GL",
                            IsEnabled = true,
                            Name = "Greenland"
                        },
                        new
                        {
                            Id = 87,
                            Code = "GD",
                            IsEnabled = true,
                            Name = "Grenada"
                        },
                        new
                        {
                            Id = 88,
                            Code = "GP",
                            IsEnabled = true,
                            Name = "Guadeloupe"
                        },
                        new
                        {
                            Id = 89,
                            Code = "GU",
                            IsEnabled = true,
                            Name = "Guam"
                        },
                        new
                        {
                            Id = 90,
                            Code = "GT",
                            IsEnabled = true,
                            Name = "Guatemala"
                        },
                        new
                        {
                            Id = 91,
                            Code = "GN",
                            IsEnabled = true,
                            Name = "Guinea"
                        },
                        new
                        {
                            Id = 92,
                            Code = "GW",
                            IsEnabled = true,
                            Name = "Guinea-bissau"
                        },
                        new
                        {
                            Id = 93,
                            Code = "GY",
                            IsEnabled = true,
                            Name = "Guyana"
                        },
                        new
                        {
                            Id = 94,
                            Code = "HT",
                            IsEnabled = true,
                            Name = "Haiti"
                        },
                        new
                        {
                            Id = 95,
                            Code = "HM",
                            IsEnabled = true,
                            Name = "Heard And Mc Donald Islands"
                        },
                        new
                        {
                            Id = 96,
                            Code = "VA",
                            IsEnabled = true,
                            Name = "Holy See (Vatican City State)"
                        },
                        new
                        {
                            Id = 97,
                            Code = "HN",
                            IsEnabled = true,
                            Name = "Honduras"
                        },
                        new
                        {
                            Id = 98,
                            Code = "HK",
                            IsEnabled = true,
                            Name = "Hong Kong"
                        },
                        new
                        {
                            Id = 99,
                            Code = "HU",
                            IsEnabled = true,
                            Name = "Hungary"
                        },
                        new
                        {
                            Id = 100,
                            Code = "IS",
                            IsEnabled = true,
                            Name = "Iceland"
                        },
                        new
                        {
                            Id = 101,
                            Code = "IN",
                            IsEnabled = true,
                            Name = "India"
                        },
                        new
                        {
                            Id = 102,
                            Code = "ID",
                            IsEnabled = true,
                            Name = "Indonesia"
                        },
                        new
                        {
                            Id = 103,
                            Code = "IR",
                            IsEnabled = true,
                            Name = "Iran (Islamic Republic Of)"
                        },
                        new
                        {
                            Id = 104,
                            Code = "IQ",
                            IsEnabled = true,
                            Name = "Iraq"
                        },
                        new
                        {
                            Id = 105,
                            Code = "IE",
                            IsEnabled = true,
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = 106,
                            Code = "IL",
                            IsEnabled = true,
                            Name = "Israel"
                        },
                        new
                        {
                            Id = 107,
                            Code = "IT",
                            IsEnabled = true,
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 108,
                            Code = "JM",
                            IsEnabled = true,
                            Name = "Jamaica"
                        },
                        new
                        {
                            Id = 109,
                            Code = "JP",
                            IsEnabled = true,
                            Name = "Japan"
                        },
                        new
                        {
                            Id = 110,
                            Code = "JO",
                            IsEnabled = true,
                            Name = "Jordan"
                        },
                        new
                        {
                            Id = 111,
                            Code = "KZ",
                            IsEnabled = true,
                            Name = "Kazakhstan"
                        },
                        new
                        {
                            Id = 112,
                            Code = "KE",
                            IsEnabled = true,
                            Name = "Kenya"
                        },
                        new
                        {
                            Id = 113,
                            Code = "KI",
                            IsEnabled = true,
                            Name = "Kiribati"
                        },
                        new
                        {
                            Id = 114,
                            Code = "KP",
                            IsEnabled = true,
                            Name = "Korea, Democratic People's Republic Of"
                        },
                        new
                        {
                            Id = 115,
                            Code = "KR",
                            IsEnabled = true,
                            Name = "Korea, Republic Of"
                        },
                        new
                        {
                            Id = 116,
                            Code = "KW",
                            IsEnabled = true,
                            Name = "Kuwait"
                        },
                        new
                        {
                            Id = 117,
                            Code = "KG",
                            IsEnabled = true,
                            Name = "Kyrgyzstan"
                        },
                        new
                        {
                            Id = 118,
                            Code = "LA",
                            IsEnabled = true,
                            Name = "Lao People's Democratic Republic"
                        },
                        new
                        {
                            Id = 119,
                            Code = "LV",
                            IsEnabled = true,
                            Name = "Latvia"
                        },
                        new
                        {
                            Id = 120,
                            Code = "LB",
                            IsEnabled = true,
                            Name = "Lebanon"
                        },
                        new
                        {
                            Id = 121,
                            Code = "LS",
                            IsEnabled = true,
                            Name = "Lesotho"
                        },
                        new
                        {
                            Id = 122,
                            Code = "LR",
                            IsEnabled = true,
                            Name = "Liberia"
                        },
                        new
                        {
                            Id = 123,
                            Code = "LY",
                            IsEnabled = true,
                            Name = "Libyan Arab Jamahiriya"
                        },
                        new
                        {
                            Id = 124,
                            Code = "LI",
                            IsEnabled = true,
                            Name = "Liechtenstein"
                        },
                        new
                        {
                            Id = 125,
                            Code = "LT",
                            IsEnabled = true,
                            Name = "Lithuania"
                        },
                        new
                        {
                            Id = 126,
                            Code = "LU",
                            IsEnabled = true,
                            Name = "Luxembourg"
                        },
                        new
                        {
                            Id = 127,
                            Code = "MO",
                            IsEnabled = true,
                            Name = "Macau"
                        },
                        new
                        {
                            Id = 128,
                            Code = "MK",
                            IsEnabled = true,
                            Name = "Macedonia, The Former Yugoslav Republic Of"
                        },
                        new
                        {
                            Id = 129,
                            Code = "MG",
                            IsEnabled = true,
                            Name = "Madagascar"
                        },
                        new
                        {
                            Id = 130,
                            Code = "MW",
                            IsEnabled = true,
                            Name = "Malawi"
                        },
                        new
                        {
                            Id = 131,
                            Code = "MY",
                            IsEnabled = true,
                            Name = "Malaysia"
                        },
                        new
                        {
                            Id = 132,
                            Code = "MV",
                            IsEnabled = true,
                            Name = "Maldives"
                        },
                        new
                        {
                            Id = 133,
                            Code = "ML",
                            IsEnabled = true,
                            Name = "Mali"
                        },
                        new
                        {
                            Id = 134,
                            Code = "MT",
                            IsEnabled = true,
                            Name = "Malta"
                        },
                        new
                        {
                            Id = 135,
                            Code = "MH",
                            IsEnabled = true,
                            Name = "Marshall Islands"
                        },
                        new
                        {
                            Id = 136,
                            Code = "MQ",
                            IsEnabled = true,
                            Name = "Martinique"
                        },
                        new
                        {
                            Id = 137,
                            Code = "MR",
                            IsEnabled = true,
                            Name = "Mauritania"
                        },
                        new
                        {
                            Id = 138,
                            Code = "MU",
                            IsEnabled = true,
                            Name = "Mauritius"
                        },
                        new
                        {
                            Id = 139,
                            Code = "YT",
                            IsEnabled = true,
                            Name = "Mayotte"
                        },
                        new
                        {
                            Id = 140,
                            Code = "MX",
                            IsEnabled = true,
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = 141,
                            Code = "FM",
                            IsEnabled = true,
                            Name = "Micronesia, Federated States Of"
                        },
                        new
                        {
                            Id = 142,
                            Code = "MD",
                            IsEnabled = true,
                            Name = "Moldova, Republic Of"
                        },
                        new
                        {
                            Id = 143,
                            Code = "MC",
                            IsEnabled = true,
                            Name = "Monaco"
                        },
                        new
                        {
                            Id = 144,
                            Code = "MN",
                            IsEnabled = true,
                            Name = "Mongolia"
                        },
                        new
                        {
                            Id = 145,
                            Code = "MS",
                            IsEnabled = true,
                            Name = "Montserrat"
                        },
                        new
                        {
                            Id = 146,
                            Code = "MA",
                            IsEnabled = true,
                            Name = "Morocco"
                        },
                        new
                        {
                            Id = 147,
                            Code = "MZ",
                            IsEnabled = true,
                            Name = "Mozambique"
                        },
                        new
                        {
                            Id = 148,
                            Code = "MM",
                            IsEnabled = true,
                            Name = "Myanmar"
                        },
                        new
                        {
                            Id = 149,
                            Code = "NA",
                            IsEnabled = true,
                            Name = "Namibia"
                        },
                        new
                        {
                            Id = 150,
                            Code = "NR",
                            IsEnabled = true,
                            Name = "Nauru"
                        },
                        new
                        {
                            Id = 151,
                            Code = "NP",
                            IsEnabled = true,
                            Name = "Nepal"
                        },
                        new
                        {
                            Id = 152,
                            Code = "NL",
                            IsEnabled = true,
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = 153,
                            Code = "AN",
                            IsEnabled = true,
                            Name = "Netherlands Antilles"
                        },
                        new
                        {
                            Id = 154,
                            Code = "NC",
                            IsEnabled = true,
                            Name = "New Caledonia"
                        },
                        new
                        {
                            Id = 155,
                            Code = "NZ",
                            IsEnabled = true,
                            Name = "New Zealand"
                        },
                        new
                        {
                            Id = 156,
                            Code = "NI",
                            IsEnabled = true,
                            Name = "Nicaragua"
                        },
                        new
                        {
                            Id = 157,
                            Code = "NE",
                            IsEnabled = true,
                            Name = "Niger"
                        },
                        new
                        {
                            Id = 158,
                            Code = "NG",
                            IsEnabled = true,
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = 159,
                            Code = "NU",
                            IsEnabled = true,
                            Name = "Niue"
                        },
                        new
                        {
                            Id = 160,
                            Code = "NF",
                            IsEnabled = true,
                            Name = "Norfolk Island"
                        },
                        new
                        {
                            Id = 161,
                            Code = "MP",
                            IsEnabled = true,
                            Name = "Northern Mariana Islands"
                        },
                        new
                        {
                            Id = 162,
                            Code = "NO",
                            IsEnabled = true,
                            Name = "Norway"
                        },
                        new
                        {
                            Id = 163,
                            Code = "OM",
                            IsEnabled = true,
                            Name = "Oman"
                        },
                        new
                        {
                            Id = 164,
                            Code = "PK",
                            IsEnabled = true,
                            Name = "Pakistan"
                        },
                        new
                        {
                            Id = 165,
                            Code = "PW",
                            IsEnabled = true,
                            Name = "Palau"
                        },
                        new
                        {
                            Id = 166,
                            Code = "PA",
                            IsEnabled = true,
                            Name = "Panama"
                        },
                        new
                        {
                            Id = 167,
                            Code = "PG",
                            IsEnabled = true,
                            Name = "Papua New Guinea"
                        },
                        new
                        {
                            Id = 168,
                            Code = "PY",
                            IsEnabled = true,
                            Name = "Paraguay"
                        },
                        new
                        {
                            Id = 169,
                            Code = "PE",
                            IsEnabled = true,
                            Name = "Peru"
                        },
                        new
                        {
                            Id = 170,
                            Code = "PH",
                            IsEnabled = true,
                            Name = "Philippines"
                        },
                        new
                        {
                            Id = 171,
                            Code = "PN",
                            IsEnabled = true,
                            Name = "Pitcairn"
                        },
                        new
                        {
                            Id = 172,
                            Code = "PL",
                            IsEnabled = true,
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 173,
                            Code = "PT",
                            IsEnabled = true,
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = 174,
                            Code = "PR",
                            IsEnabled = true,
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            Id = 175,
                            Code = "QA",
                            IsEnabled = true,
                            Name = "Qatar"
                        },
                        new
                        {
                            Id = 176,
                            Code = "RE",
                            IsEnabled = true,
                            Name = "Reunion"
                        },
                        new
                        {
                            Id = 177,
                            Code = "RO",
                            IsEnabled = true,
                            Name = "Romania"
                        },
                        new
                        {
                            Id = 178,
                            Code = "RU",
                            IsEnabled = true,
                            Name = "Russian Federation"
                        },
                        new
                        {
                            Id = 179,
                            Code = "RW",
                            IsEnabled = true,
                            Name = "Rwanda"
                        },
                        new
                        {
                            Id = 180,
                            Code = "KN",
                            IsEnabled = true,
                            Name = "Saint Kitts And Nevis"
                        },
                        new
                        {
                            Id = 181,
                            Code = "LC",
                            IsEnabled = true,
                            Name = "Saint Lucia"
                        },
                        new
                        {
                            Id = 182,
                            Code = "VC",
                            IsEnabled = true,
                            Name = "Saint Vincent And The Grenadines"
                        },
                        new
                        {
                            Id = 183,
                            Code = "WS",
                            IsEnabled = true,
                            Name = "Samoa"
                        },
                        new
                        {
                            Id = 184,
                            Code = "SM",
                            IsEnabled = true,
                            Name = "San Marino"
                        },
                        new
                        {
                            Id = 185,
                            Code = "ST",
                            IsEnabled = true,
                            Name = "Sao Tome And Principe"
                        },
                        new
                        {
                            Id = 186,
                            Code = "SA",
                            IsEnabled = true,
                            Name = "Saudi Arabia"
                        },
                        new
                        {
                            Id = 187,
                            Code = "SN",
                            IsEnabled = true,
                            Name = "Senegal"
                        },
                        new
                        {
                            Id = 188,
                            Code = "SC",
                            IsEnabled = true,
                            Name = "Seychelles"
                        },
                        new
                        {
                            Id = 189,
                            Code = "SL",
                            IsEnabled = true,
                            Name = "Sierra Leone"
                        },
                        new
                        {
                            Id = 190,
                            Code = "SG",
                            IsEnabled = true,
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = 191,
                            Code = "SK",
                            IsEnabled = true,
                            Name = "Slovakia (Slovak Republic)"
                        },
                        new
                        {
                            Id = 192,
                            Code = "SI",
                            IsEnabled = true,
                            Name = "Slovenia"
                        },
                        new
                        {
                            Id = 193,
                            Code = "SB",
                            IsEnabled = true,
                            Name = "Solomon Islands"
                        },
                        new
                        {
                            Id = 194,
                            Code = "SO",
                            IsEnabled = true,
                            Name = "Somalia"
                        },
                        new
                        {
                            Id = 195,
                            Code = "ZA",
                            IsEnabled = true,
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = 196,
                            Code = "GS",
                            IsEnabled = true,
                            Name = "South Georgia And The South Sandwich Islands"
                        },
                        new
                        {
                            Id = 197,
                            Code = "ES",
                            IsEnabled = true,
                            Name = "Spain"
                        },
                        new
                        {
                            Id = 198,
                            Code = "LK",
                            IsEnabled = true,
                            Name = "Sri Lanka"
                        },
                        new
                        {
                            Id = 199,
                            Code = "SH",
                            IsEnabled = true,
                            Name = "St. Helena"
                        },
                        new
                        {
                            Id = 200,
                            Code = "PM",
                            IsEnabled = true,
                            Name = "St. Pierre And Miquelon"
                        },
                        new
                        {
                            Id = 201,
                            Code = "SD",
                            IsEnabled = true,
                            Name = "Sudan"
                        },
                        new
                        {
                            Id = 202,
                            Code = "SR",
                            IsEnabled = true,
                            Name = "Suriname"
                        },
                        new
                        {
                            Id = 203,
                            Code = "SJ",
                            IsEnabled = true,
                            Name = "Svalbard And Jan Mayen Islands"
                        },
                        new
                        {
                            Id = 204,
                            Code = "SZ",
                            IsEnabled = true,
                            Name = "Swaziland"
                        },
                        new
                        {
                            Id = 205,
                            Code = "SE",
                            IsEnabled = true,
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = 206,
                            Code = "CH",
                            IsEnabled = true,
                            Name = "Switzerland"
                        },
                        new
                        {
                            Id = 207,
                            Code = "SY",
                            IsEnabled = true,
                            Name = "Syrian Arab Republic"
                        },
                        new
                        {
                            Id = 208,
                            Code = "TW",
                            IsEnabled = true,
                            Name = "Taiwan, Province Of China"
                        },
                        new
                        {
                            Id = 209,
                            Code = "TJ",
                            IsEnabled = true,
                            Name = "Tajikistan"
                        },
                        new
                        {
                            Id = 210,
                            Code = "TZ",
                            IsEnabled = true,
                            Name = "Tanzania, United Republic Of"
                        },
                        new
                        {
                            Id = 211,
                            Code = "TH",
                            IsEnabled = true,
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = 212,
                            Code = "TG",
                            IsEnabled = true,
                            Name = "Togo"
                        },
                        new
                        {
                            Id = 213,
                            Code = "TK",
                            IsEnabled = true,
                            Name = "Tokelau"
                        },
                        new
                        {
                            Id = 214,
                            Code = "TO",
                            IsEnabled = true,
                            Name = "Tonga"
                        },
                        new
                        {
                            Id = 215,
                            Code = "TT",
                            IsEnabled = true,
                            Name = "Trinidad And Tobago"
                        },
                        new
                        {
                            Id = 216,
                            Code = "TN",
                            IsEnabled = true,
                            Name = "Tunisia"
                        },
                        new
                        {
                            Id = 217,
                            Code = "TR",
                            IsEnabled = true,
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = 218,
                            Code = "TM",
                            IsEnabled = true,
                            Name = "Turkmenistan"
                        },
                        new
                        {
                            Id = 219,
                            Code = "TC",
                            IsEnabled = true,
                            Name = "Turks And Caicos Islands"
                        },
                        new
                        {
                            Id = 220,
                            Code = "TV",
                            IsEnabled = true,
                            Name = "Tuvalu"
                        },
                        new
                        {
                            Id = 221,
                            Code = "UG",
                            IsEnabled = true,
                            Name = "Uganda"
                        },
                        new
                        {
                            Id = 222,
                            Code = "UA",
                            IsEnabled = true,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 223,
                            Code = "AE",
                            IsEnabled = true,
                            Name = "United Arab Emirates"
                        },
                        new
                        {
                            Id = 224,
                            Code = "GB",
                            IsEnabled = true,
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = 225,
                            Code = "US",
                            IsEnabled = true,
                            Name = "United States"
                        },
                        new
                        {
                            Id = 226,
                            Code = "UM",
                            IsEnabled = true,
                            Name = "United States Minor Outlying Islands"
                        },
                        new
                        {
                            Id = 227,
                            Code = "UY",
                            IsEnabled = true,
                            Name = "Uruguay"
                        },
                        new
                        {
                            Id = 228,
                            Code = "UZ",
                            IsEnabled = true,
                            Name = "Uzbekistan"
                        },
                        new
                        {
                            Id = 229,
                            Code = "VU",
                            IsEnabled = true,
                            Name = "Vanuatu"
                        },
                        new
                        {
                            Id = 230,
                            Code = "VE",
                            IsEnabled = true,
                            Name = "Venezuela"
                        },
                        new
                        {
                            Id = 231,
                            Code = "VN",
                            IsEnabled = true,
                            Name = "Viet Nam"
                        },
                        new
                        {
                            Id = 232,
                            Code = "VG",
                            IsEnabled = true,
                            Name = "Virgin Islands (British)"
                        },
                        new
                        {
                            Id = 233,
                            Code = "VI",
                            IsEnabled = true,
                            Name = "Virgin Islands (U.S.)"
                        },
                        new
                        {
                            Id = 234,
                            Code = "WF",
                            IsEnabled = true,
                            Name = "Wallis And Futuna Islands"
                        },
                        new
                        {
                            Id = 235,
                            Code = "EH",
                            IsEnabled = true,
                            Name = "Western Sahara"
                        },
                        new
                        {
                            Id = 236,
                            Code = "YE",
                            IsEnabled = true,
                            Name = "Yemen"
                        },
                        new
                        {
                            Id = 237,
                            Code = "YU",
                            IsEnabled = true,
                            Name = "Yugoslavia"
                        },
                        new
                        {
                            Id = 238,
                            Code = "ZM",
                            IsEnabled = true,
                            Name = "Zambia"
                        },
                        new
                        {
                            Id = 239,
                            Code = "ZW",
                            IsEnabled = true,
                            Name = "Zimbabwe"
                        });
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_deleted");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_modified");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric")
                        .HasColumnName("discount");

                    b.Property<bool>("IsDiscountFixed")
                        .HasColumnType("boolean")
                        .HasColumnName("is_discount_fixed");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.HasKey("Id")
                        .HasName("pk_coupons");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("ix_coupons_code");

                    b.ToTable("coupons", (string)null);
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_deleted");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_modified");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_customers");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)")
                        .HasColumnName("discriminator");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.HasKey("Id")
                        .HasName("pk_images");

                    b.ToTable("images", (string)null);

                    b.HasDiscriminator().HasValue("Image");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BillingAddressId")
                        .HasColumnType("integer")
                        .HasColumnName("billing_address_id");

                    b.Property<int?>("CouponId")
                        .HasColumnType("integer")
                        .HasColumnName("coupon_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_deleted");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_modified");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric")
                        .HasColumnName("discount");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<Guid>("OrderGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("order_guid");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("integer")
                        .HasColumnName("payment_method_id");

                    b.Property<string>("PaymentMethodNonceDescriptor")
                        .HasColumnType("text")
                        .HasColumnName("payment_method_nonce_descriptor");

                    b.Property<string>("PaymentMethodNonceValue")
                        .HasColumnType("text")
                        .HasColumnName("payment_method_nonce_value");

                    b.Property<string>("PaymentTransactionId")
                        .HasColumnType("text")
                        .HasColumnName("payment_transaction_id");

                    b.Property<int?>("QuoteId")
                        .HasColumnType("integer")
                        .HasColumnName("quote_id");

                    b.Property<int>("ShippingAddressId")
                        .HasColumnType("integer")
                        .HasColumnName("shipping_address_id");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer")
                        .HasColumnName("status_id");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("numeric")
                        .HasColumnName("subtotal");

                    b.Property<decimal>("Tax")
                        .HasColumnType("numeric")
                        .HasColumnName("tax");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric")
                        .HasColumnName("total");

                    b.Property<string>("TrackingNumber")
                        .HasColumnType("text")
                        .HasColumnName("tracking_number");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.HasIndex("BillingAddressId")
                        .HasDatabaseName("ix_orders_billing_address_id");

                    b.HasIndex("CouponId")
                        .HasDatabaseName("ix_orders_coupon_id");

                    b.HasIndex("CustomerId")
                        .HasDatabaseName("ix_orders_customer_id");

                    b.HasIndex("PaymentMethodId")
                        .HasDatabaseName("ix_orders_payment_method_id");

                    b.HasIndex("QuoteId")
                        .HasDatabaseName("ix_orders_quote_id");

                    b.HasIndex("ShippingAddressId")
                        .HasDatabaseName("ix_orders_shipping_address_id");

                    b.HasIndex("StatusId")
                        .HasDatabaseName("ix_orders_status_id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric")
                        .HasColumnName("discount");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer")
                        .HasColumnName("order_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<int?>("QuoteItemId")
                        .HasColumnType("integer")
                        .HasColumnName("quote_item_id");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric")
                        .HasColumnName("total");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("total_price");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("unit_price");

                    b.HasKey("Id")
                        .HasName("pk_order_items");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_order_items_order_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_order_items_product_id");

                    b.HasIndex("QuoteItemId")
                        .HasDatabaseName("ix_order_items_quote_item_id");

                    b.ToTable("order_items", (string)null);
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_order_statuses");

                    b.ToTable("order_statuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Processing"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Invoiced"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cancelled"
                        });
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_payment_methods");

                    b.ToTable("payment_methods", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Credit Card"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Free Order"
                        });
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("numeric")
                        .HasColumnName("base_price");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_deleted");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_modified");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("numeric")
                        .HasColumnName("discount_amount");

                    b.Property<bool>("IsDiscounted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_discounted");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enabled");

                    b.Property<bool>("IsInStock")
                        .HasColumnType("boolean")
                        .HasColumnName("is_in_stock");

                    b.Property<int?>("MainImageId")
                        .HasColumnType("integer")
                        .HasColumnName("main_image_id");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text")
                        .HasColumnName("meta_description");

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("text")
                        .HasColumnName("meta_keywords");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("text")
                        .HasColumnName("meta_title");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<NpgsqlTsVector>("SearchVector")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("tsvector")
                        .HasColumnName("search_vector")
                        .HasAnnotation("Npgsql:TsVectorConfig", "english")
                        .HasAnnotation("Npgsql:TsVectorProperties", new[] { "Name", "Description", "ShortDescription", "MetaDescription", "MetaKeywords", "Sku" });

                    b.Property<string>("ShortDescription")
                        .HasColumnType("text")
                        .HasColumnName("short_description");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sku");

                    b.Property<int?>("ThumbnailImageId")
                        .HasColumnType("integer")
                        .HasColumnName("thumbnail_image_id");

                    b.Property<string>("UrlKey")
                        .HasColumnType("text")
                        .HasColumnName("url_key");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric")
                        .HasColumnName("weight");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_products_category_id");

                    b.HasIndex("MainImageId")
                        .HasDatabaseName("ix_products_main_image_id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_products_name");

                    b.HasIndex("SearchVector")
                        .HasDatabaseName("ix_products_search_vector");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("SearchVector"), "GIN");

                    b.HasIndex("ThumbnailImageId")
                        .HasDatabaseName("ix_products_thumbnail_image_id");

                    b.HasIndex("UrlKey")
                        .IsUnique()
                        .HasDatabaseName("ix_products_url_key");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BillingAddressId")
                        .HasColumnType("integer")
                        .HasColumnName("billing_address_id");

                    b.Property<int?>("CouponId")
                        .HasColumnType("integer")
                        .HasColumnName("coupon_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_deleted");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_modified");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("boolean")
                        .HasColumnName("is_open");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<int?>("ShippingAddressId")
                        .HasColumnType("integer")
                        .HasColumnName("shipping_address_id");

                    b.Property<decimal>("Tax")
                        .HasColumnType("numeric")
                        .HasColumnName("tax");

                    b.HasKey("Id")
                        .HasName("pk_quotes");

                    b.HasIndex("BillingAddressId")
                        .HasDatabaseName("ix_quotes_billing_address_id");

                    b.HasIndex("CouponId")
                        .HasDatabaseName("ix_quotes_coupon_id");

                    b.HasIndex("CustomerId")
                        .HasDatabaseName("ix_quotes_customer_id");

                    b.HasIndex("ShippingAddressId")
                        .HasDatabaseName("ix_quotes_shipping_address_id");

                    b.ToTable("quotes", (string)null);
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.QuoteItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<int>("QuoteId")
                        .HasColumnType("integer")
                        .HasColumnName("quote_id");

                    b.HasKey("Id")
                        .HasName("pk_quote_items");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_quote_items_product_id");

                    b.HasIndex("QuoteId")
                        .HasDatabaseName("ix_quote_items_quote_id");

                    b.ToTable("quote_items", (string)null);
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.SiteContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_site_contents");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_site_contents_name");

                    b.ToTable("site_contents", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "",
                            Name = "homepage_content"
                        },
                        new
                        {
                            Id = 2,
                            Content = "",
                            Name = "site_message"
                        });
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("abbreviation");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_states");

                    b.HasIndex("Abbreviation")
                        .IsUnique()
                        .HasDatabaseName("ix_states_abbreviation");

                    b.ToTable("states", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "AL",
                            Name = "Alabama"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "AK",
                            Name = "Alaska"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "AZ",
                            Name = "Arizona"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "AR",
                            Name = "Arkansas"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "CA",
                            Name = "California"
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "CO",
                            Name = "Colorado"
                        },
                        new
                        {
                            Id = 7,
                            Abbreviation = "CT",
                            Name = "Connecticut"
                        },
                        new
                        {
                            Id = 8,
                            Abbreviation = "DE",
                            Name = "Delaware"
                        },
                        new
                        {
                            Id = 9,
                            Abbreviation = "FL",
                            Name = "Florida"
                        },
                        new
                        {
                            Id = 10,
                            Abbreviation = "GA",
                            Name = "Georgia"
                        },
                        new
                        {
                            Id = 11,
                            Abbreviation = "HI",
                            Name = "Hawaii"
                        },
                        new
                        {
                            Id = 12,
                            Abbreviation = "ID",
                            Name = "Idaho"
                        },
                        new
                        {
                            Id = 13,
                            Abbreviation = "IL",
                            Name = "Illinois"
                        },
                        new
                        {
                            Id = 14,
                            Abbreviation = "IN",
                            Name = "Indiana"
                        },
                        new
                        {
                            Id = 15,
                            Abbreviation = "IA",
                            Name = "Iowa"
                        },
                        new
                        {
                            Id = 16,
                            Abbreviation = "KS",
                            Name = "Kansas"
                        },
                        new
                        {
                            Id = 17,
                            Abbreviation = "KY",
                            Name = "Kentucky"
                        },
                        new
                        {
                            Id = 18,
                            Abbreviation = "LA",
                            Name = "Louisiana"
                        },
                        new
                        {
                            Id = 19,
                            Abbreviation = "ME",
                            Name = "Maine"
                        },
                        new
                        {
                            Id = 20,
                            Abbreviation = "MD",
                            Name = "Maryland"
                        },
                        new
                        {
                            Id = 21,
                            Abbreviation = "MA",
                            Name = "Massachusetts"
                        },
                        new
                        {
                            Id = 22,
                            Abbreviation = "MI",
                            Name = "Michigan"
                        },
                        new
                        {
                            Id = 23,
                            Abbreviation = "MN",
                            Name = "Minnesota"
                        },
                        new
                        {
                            Id = 24,
                            Abbreviation = "MS",
                            Name = "Mississippi"
                        },
                        new
                        {
                            Id = 25,
                            Abbreviation = "MO",
                            Name = "Missouri"
                        },
                        new
                        {
                            Id = 26,
                            Abbreviation = "MT",
                            Name = "Montana"
                        },
                        new
                        {
                            Id = 27,
                            Abbreviation = "NE",
                            Name = "Nebraska"
                        },
                        new
                        {
                            Id = 28,
                            Abbreviation = "NV",
                            Name = "Nevada"
                        },
                        new
                        {
                            Id = 29,
                            Abbreviation = "NH",
                            Name = "New Hampshire"
                        },
                        new
                        {
                            Id = 30,
                            Abbreviation = "NJ",
                            Name = "New Jersey"
                        },
                        new
                        {
                            Id = 31,
                            Abbreviation = "NM",
                            Name = "New Mexico"
                        },
                        new
                        {
                            Id = 32,
                            Abbreviation = "NY",
                            Name = "New York"
                        },
                        new
                        {
                            Id = 33,
                            Abbreviation = "NC",
                            Name = "North Carolina"
                        },
                        new
                        {
                            Id = 34,
                            Abbreviation = "ND",
                            Name = "North Dakota"
                        },
                        new
                        {
                            Id = 35,
                            Abbreviation = "OH",
                            Name = "Ohio"
                        },
                        new
                        {
                            Id = 36,
                            Abbreviation = "OK",
                            Name = "Oklahoma"
                        },
                        new
                        {
                            Id = 37,
                            Abbreviation = "OR",
                            Name = "Oregon"
                        },
                        new
                        {
                            Id = 38,
                            Abbreviation = "PA",
                            Name = "Pennsylvania"
                        },
                        new
                        {
                            Id = 39,
                            Abbreviation = "RI",
                            Name = "Rhode Island"
                        },
                        new
                        {
                            Id = 40,
                            Abbreviation = "SC",
                            Name = "South Carolina"
                        },
                        new
                        {
                            Id = 41,
                            Abbreviation = "SD",
                            Name = "South Dakota"
                        },
                        new
                        {
                            Id = 42,
                            Abbreviation = "TN",
                            Name = "Tennessee"
                        },
                        new
                        {
                            Id = 43,
                            Abbreviation = "TX",
                            Name = "Texas"
                        },
                        new
                        {
                            Id = 44,
                            Abbreviation = "UT",
                            Name = "Utah"
                        },
                        new
                        {
                            Id = 45,
                            Abbreviation = "VT",
                            Name = "Vermont"
                        },
                        new
                        {
                            Id = 46,
                            Abbreviation = "VA",
                            Name = "Virginia"
                        },
                        new
                        {
                            Id = 47,
                            Abbreviation = "WA",
                            Name = "Washington"
                        },
                        new
                        {
                            Id = 48,
                            Abbreviation = "WV",
                            Name = "West Virginia"
                        },
                        new
                        {
                            Id = 49,
                            Abbreviation = "WI",
                            Name = "Wisconsin"
                        },
                        new
                        {
                            Id = 50,
                            Abbreviation = "WY",
                            Name = "Wyoming"
                        },
                        new
                        {
                            Id = 51,
                            Abbreviation = "DC",
                            Name = "District of Columbia"
                        });
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer")
                        .HasColumnName("access_failed_count");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text")
                        .HasColumnName("concurrency_stamp");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("email_confirmed");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("lockout_enabled");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lockout_end");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text")
                        .HasColumnName("normalized_email");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text")
                        .HasColumnName("normalized_user_name");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("phone_number_confirmed");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text")
                        .HasColumnName("security_stamp");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("two_factor_enabled");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("CustomerId")
                        .HasDatabaseName("ix_users_customer_id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text")
                        .HasColumnName("concurrency_stamp");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("text")
                        .HasColumnName("normalized_name");

                    b.HasKey("Id")
                        .HasName("pk_roles");

                    b.ToTable("roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "832e598d-6660-4c6f-a48a-9bed25a49671",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "8a80a6c6-dae7-48a0-9b5b-841564ba537d",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text")
                        .HasColumnName("claim_type");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text")
                        .HasColumnName("claim_value");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.HasKey("Id")
                        .HasName("pk_role_claims");

                    b.ToTable("role_claims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text")
                        .HasColumnName("claim_type");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text")
                        .HasColumnName("claim_value");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_claims");

                    b.ToTable("user_claims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.HasKey("UserId", "RoleId")
                        .HasName("pk_user_roles");

                    b.ToTable("user_roles", (string)null);
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.CategoryImage", b =>
                {
                    b.HasBaseType("EndPointEcommerce.Domain.Entities.Image");

                    b.HasDiscriminator().HasValue("CategoryImage");
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.ProductImage", b =>
                {
                    b.HasBaseType("EndPointEcommerce.Domain.Entities.Image");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_images_product_id");

                    b.HasDiscriminator().HasValue("ProductImage");
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Address", b =>
                {
                    b.HasOne("EndPointEcommerce.Domain.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_addresses_countries_country_id");

                    b.HasOne("EndPointEcommerce.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("fk_addresses_customers_customer_id");

                    b.HasOne("EndPointEcommerce.Domain.Entities.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .HasConstraintName("fk_addresses_states_state_id");

                    b.Navigation("Country");

                    b.Navigation("Customer");

                    b.Navigation("State");
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Category", b =>
                {
                    b.HasOne("EndPointEcommerce.Domain.Entities.CategoryImage", "MainImage")
                        .WithMany()
                        .HasForeignKey("MainImageId")
                        .HasConstraintName("fk_categories_category_images_main_image_id");

                    b.Navigation("MainImage");
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Order", b =>
                {
                    b.HasOne("EndPointEcommerce.Domain.Entities.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orders_addresses_billing_address_id");

                    b.HasOne("EndPointEcommerce.Domain.Entities.Coupon", "Coupon")
                        .WithMany()
                        .HasForeignKey("CouponId")
                        .HasConstraintName("fk_orders_coupons_coupon_id");

                    b.HasOne("EndPointEcommerce.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orders_customers_customer_id");

                    b.HasOne("EndPointEcommerce.Domain.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orders_payment_methods_payment_method_id");

                    b.HasOne("EndPointEcommerce.Domain.Entities.Quote", "Quote")
                        .WithMany()
                        .HasForeignKey("QuoteId")
                        .HasConstraintName("fk_orders_quotes_quote_id");

                    b.HasOne("EndPointEcommerce.Domain.Entities.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orders_addresses_shipping_address_id");

                    b.HasOne("EndPointEcommerce.Domain.Entities.OrderStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orders_order_statuses_status_id");

                    b.Navigation("BillingAddress");

                    b.Navigation("Coupon");

                    b.Navigation("Customer");

                    b.Navigation("PaymentMethod");

                    b.Navigation("Quote");

                    b.Navigation("ShippingAddress");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("EndPointEcommerce.Domain.Entities.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_orders_order_id");

                    b.HasOne("EndPointEcommerce.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_products_product_id");

                    b.HasOne("EndPointEcommerce.Domain.Entities.QuoteItem", "QuoteItem")
                        .WithMany()
                        .HasForeignKey("QuoteItemId")
                        .HasConstraintName("fk_order_items_quote_items_quote_item_id");

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("QuoteItem");
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Product", b =>
                {
                    b.HasOne("EndPointEcommerce.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("fk_products_categories_category_id");

                    b.HasOne("EndPointEcommerce.Domain.Entities.ProductImage", "MainImage")
                        .WithMany()
                        .HasForeignKey("MainImageId")
                        .HasConstraintName("fk_products_product_images_main_image_id");

                    b.HasOne("EndPointEcommerce.Domain.Entities.ProductImage", "ThumbnailImage")
                        .WithMany()
                        .HasForeignKey("ThumbnailImageId")
                        .HasConstraintName("fk_products_product_images_thumbnail_image_id");

                    b.Navigation("Category");

                    b.Navigation("MainImage");

                    b.Navigation("ThumbnailImage");
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Quote", b =>
                {
                    b.HasOne("EndPointEcommerce.Domain.Entities.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId")
                        .HasConstraintName("fk_quotes_addresses_billing_address_id");

                    b.HasOne("EndPointEcommerce.Domain.Entities.Coupon", "Coupon")
                        .WithMany()
                        .HasForeignKey("CouponId")
                        .HasConstraintName("fk_quotes_coupons_coupon_id");

                    b.HasOne("EndPointEcommerce.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("fk_quotes_customers_customer_id");

                    b.HasOne("EndPointEcommerce.Domain.Entities.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .HasConstraintName("fk_quotes_addresses_shipping_address_id");

                    b.Navigation("BillingAddress");

                    b.Navigation("Coupon");

                    b.Navigation("Customer");

                    b.Navigation("ShippingAddress");
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.QuoteItem", b =>
                {
                    b.HasOne("EndPointEcommerce.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_quote_items_products_product_id");

                    b.HasOne("EndPointEcommerce.Domain.Entities.Quote", "Quote")
                        .WithMany("Items")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_quote_items_quotes_quote_id");

                    b.Navigation("Product");

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.User", b =>
                {
                    b.HasOne("EndPointEcommerce.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("fk_users_customers_customer_id");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.ProductImage", b =>
                {
                    b.HasOne("EndPointEcommerce.Domain.Entities.Product", "Product")
                        .WithMany("AdditionalImages")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_images_products_product_id");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Product", b =>
                {
                    b.Navigation("AdditionalImages");
                });

            modelBuilder.Entity("EndPointEcommerce.Domain.Entities.Quote", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
